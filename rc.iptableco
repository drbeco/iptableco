#! /bin/sh
### BEGIN INIT INFO
# Provides:          rc.iptableco
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Used to control iptables service. Commands: start, stop, restart, status, save, restore, add, panic, install and help
# Description:       This file is a script to load/unload iptables firewall rules located at /etc/iptableco/iptables-main-up.rules
#                    created by /etc/rc.d/rc.iptableco save or iptables-save > /etc/iptableco/iptables-main-up.rules
#   help    :  shows this help
#   start   :  starts the firewall from standard file /etc/iptableco/iptables-main-up.rules
#   stop    :  stops the firewall, open all doors, IPV4 and IPV6
#   restart :  calls stop and start, to restart the firewall
#   status  :  shows the rules in place for IPV4 and IPV6
#   save    :  saves both rules from IPV4 and IPV6 to a backup-file named from /etc/iptableco/date-iptables-bkp-up.rules
#   restore :  restores from a backup-file to iptables-main-up.rules and restarts the firewall
#   add     :  add rules without stopping the firewall (only for IPv4 currently
#   panic   :  stops all traffic in and out, keeping only loopback and the configured SSH maintainer client
#
### END INIT INFO
#
# Author: Ruben Carlo Benante <rcb@beco.cc>
# Launch: 2016-05-26
# VERSION="20240404.005802"
#
# ##########################################################################################################################

# Bash options:
#    set -e : exit shell on errors
#    set -u : treat undefined variables as errors
set -eu

# ##########################################################################################################################
# Handle error function
#
handle_error()
{
    echo "iptables-error : iptableco handling unknown error"
    echo "iptables-error : iptableco handling unknown error" >> /var/log/messages
    exit 1
}
trap "handle_error" ERR


###########################################################################
# Global config vars
#
VERSION="20240404.005802"
DDATE=$(date +"%Y%m%d%H%M%S")
MAINIP="192.168.11.44" # Add here a safe IP for panic maintainer
PATH=/sbin:/usr/sbin:/bin:/usr/bin
MAINRULES=/etc/iptableco/iptables-main-up.rules
RESTORE=0 # Restore from backup file
INSERT=0 # Insert rules without reseting the firewall

# IPV4 bin
IPT=/usr/sbin/iptables
IPTS=/usr/sbin/iptables-save
IPTR=/usr/sbin/iptables-restore

# IPV6 bin
IP6T=/usr/sbin/ip6tables
IP6TS=/usr/sbin/ip6tables-save
IP6TR=/usr/sbin/ip6tables-restore

# ##########################################################################################################################
# creates a minimal /etc/iptableco/iptables-main-up.rules
#
iptableco_install()
{
    mkdir -p /etc/iptableco
    # if [ ! -f "$MAINRULES" ]; then # careful, it deletes the current rules. Backup first advised!
cat <<- EOF > $MAINRULES
#Generated by rc.iptableco install version $VERSION on $DDATE
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT
# Completed on $DDATE
EOF
    # fi
}

# ##########################################################################################################################
# test given arguments are existing files
#
files_exist()
{
    if [ ! -f "$MAINRULES" ]; then
        echo "Unable to start iptables firewall - $MAINRULES does not exist"
        echo "Try first /etc/rc.d/rc.iptableco install"
        exit 1
    fi
    if [ ! -f "$IPT" ]; then
        echo "Cannot find $IPT for IPV4"
        exit 1
    fi
    if [ ! -f "$IP6T" ]; then
        echo "Cannot find $IP6T for IPV6"
        exit 1
    fi
    if [ $RESTORE -eq 1 ] ; then
        if [ ! -f "$RESTMAINFILE" ]; then
            echo "Error: Please provide the backup-file for restoring."
            echo "Usage: ${0} restore date-iptables-bkp-up.rules"
            # TODO: use the most recent in case no file is given
            exit 1
        fi
    fi
    if [ $INSERT -eq 1 ] ; then
        if [ ! -f "$INSERTFILE" ] ; then
            echo "Error: Please provide the file of rules to insert."
            echo "Usage: ${0} add date-iptables-add-up.rules"
            exit 1
        fi
    fi
}

# ##########################################################################################################################
# main script start:
#
case "$1" in
    'restart') # restart: need MAINRULES
        echo "Restarting iptables firewall..."
        ${0} stop
        sleep 1
        ${0} start
        echo "Restart done for IPV4 and IPV6."
        exit 0
        ;;
    'start') # start: need MAINRULES
        #TODO: if no /etc/iptableco dir, create and start a bare minimum set of rules
        echo "Setting up iptables firewall..."
        files_exist
        echo "Applying main rules..."
        $IPTR < $MAINRULES ; EXIT4=$?
        $IP6TR < $MAINRULES ; EXIT6=$?
        if [ "$EXIT4" != "0" ] && [ "$EXIT6" != "0" ] ; then
            echo "iptables-error (main) : could not start firewall"
            echo "iptables-error (main) : could not start firewall" >> /var/log/messages
            exit 1
        fi
        echo "Start done for IPV4 and IPV6."
        exit 0
        ;;
    'stop') # stop: needs no files
        echo "Stopping iptables firewall..."
        # IPV4 rules -----------------------------------------------------
        # Clear only tables that do exist, set policy to ACCEPT
        $IPTS | awk '/^[*]/ { print $1 } /^:[ADEFGINOPRSTUW]+ [^-]/ { print $1 " ACCEPT" ; } /COMMIT/ { print $0; }' | $IPTR
        $IPT -X                 # delete user-defined chains
        $IPT -Z                 # reset package counters
        # IPV6 rules -----------------------------------------------------
        # Clear only tables that do exist, set policy to ACCEPT
        $IP6TS | awk '/^[*]/ { print $1 } /^:[ADEFGINOPRSTUW]+ [^-]/ { print $1 " ACCEPT" ; } /COMMIT/ { print $0; }' | $IP6TR
        $IP6T -X                # delete user-defined chains
        $IP6T -Z                # reset package counters
        echo "Stop done. All ports open for IPV4 and IPV6."
        exit 0
        ;;
    'panic') # panic: needs no files
        echo "Closing all ports except localhost and maintainer SSH..."
        # IPV4 rules -----------------------------------------------------
        # Clear only tables that do exist, set policy to DROP
        $IPTS | awk '/^[*]/ { print $1 } /^:[ADEFGINOPRSTUW]+ [^-]/ { print $1 " DROP" ; } /COMMIT/ { print $0; }' | $IPTR
        $IPT -X                 # delete user-defined chains
        $IPT -Z                 # reset package counters
        # Don't drop INPUT/OUTPUT on localhost
        $IPT -4 -A INPUT -i lo -j ACCEPT
        $IPT -4 -A OUTPUT -o lo -j ACCEPT
        # Accept SSH from Maintainer Notebook
        $IPT -4 -A INPUT -p tcp -s $MAINIP --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
        $IPT -4 -A OUTPUT -p tcp -d $MAINIP --sport 22 -m state --state ESTABLISHED -j ACCEPT
        # IPV6 rules -----------------------------------------------------
        # Clear only tables that do exist, set policy to DROP
        $IP6TS | awk '/^[*]/ { print $1 } /^:[ADEFGINOPRSTUW]+ [^-]/ { print $1 " DROP" ; } /COMMIT/ { print $0; }' | $IP6TR
        $IP6T -X                # delete user-defined chains
        $IP6T -Z                # reset package counters
        # Don't drop INPUT/OUTPUT on localhost
        $IP6T -6 -A INPUT -i lo -j ACCEPT
        $IP6T -6 -A OUTPUT -o lo -j ACCEPT
        echo "Panic mode ON for IPV4 and IPV6."
        exit 0
        ;;
    'status') # status: needs no files
        echo "Showing status for IPV4............................................................."
        $IPT -L -n -v --line-number
        echo
        echo "Showing status for IPV6............................................................."
        $IP6T -L -n -v --line-number
        echo
        exit 0
        ;;
    'save') # Creates file BKPRULES
        echo "Saving rules for iptables firewall..."
        BKPRULES="/etc/iptableco/$DDATE-iptables-bkp-up.rules"
        # join nat IPv4 and IPv6 (CAUTION: honors only IPv4 policy)
        $IPTS -t nat | grep -Ev "COMMIT" | sed "s/^-A /-4 -A /" > $BKPRULES
        $IP6TS -t nat | grep -Ev "(^\*nat|^:[A-Z]+ )" | sed "s/^-A /-6 -A /" >> $BKPRULES
        # join filter IPv4 and IPv6 (CAUTION: honors only IPv4 policy)
        $IPTS -t filter | grep -Ev "COMMIT" | sed "s/^-A /-4 -A /" >> $BKPRULES
        $IP6TS -t filter | grep -Ev "(^\*filter|^:[A-Z]+ )" | sed "s/^-A /-6 -A /" >> $BKPRULES
        #TODO: save also tables: security, raw, mangle (if needed)
        echo "Backup file $BKPRULES saved"
        echo "Save done for IPV4 and IPV6."
        exit 0
        ;;
    'restore') # needs RESTMAINFILE, MAINRULES
        #TODO: if [ ! -f $RESTMAINFILE ] : restore the most recent backup by date
        RESTORE=1
        RESTMAINFILE=$2
        files_exist
        echo "Restoring... $RESTMAINFILE"
        cp -i $RESTMAINFILE $MAINRULES #/etc/iptableco/iptables-main-up.rules
        ${0} restart
        echo "Restore done for IPV4 and IPV6."
        exit 0
        ;;
    'add') # Insert rules without stopping the firewall (useful for docker rules)
        #TODO: add also IPv6 rules
        INSERT=1
        INSERTFILE=$2
        files_exist
        echo "Inserting new rules to current set $2"
        while read LIN ; do
            $IPT $LIN
        done < "$INSERTFILE"
        echo "Insert done for IPV4 and IPV6."
        exit 0
        ;;
    'install') # Insert rules without stopping the firewall (useful for docker rules)
        echo "Installing a minimal iptables set of rules at /etc/iptableco"
        iptableco_install
        echo "Installation done. Use /etc/rc.d/rc.iptableco start to activate the firewall"
        exit 0
        ;;
    *) # help: needs no files
        echo
        echo "Help for rc.iptableco by drbeco version $VERSION"
        echo
        echo "  Usage: $0  {help|start|stop|restart|status|save|restore|add|panic|install}"
        echo
        echo "  help    : shows this help"
        echo "  start   : starts the firewall from standard file /etc/iptableco/iptables-main-up.rules"
        echo "  stop    : stops the firewall, open all doors, IPV4 and IPV6"
        echo "  restart : calls stop and start, to restart the firewall"
        echo "  status  : shows the rules in place for IPV4 and IPV6"
        echo "  save    : saves rules from IPV4 and IPV6 to a backup-file named /etc/iptableco/date-iptables-bkp-up.rules"
        echo "  restore : restores from a backup-file to /etc/iptableco/iptables-main-up.rules and restart the firewall"
        echo "  add     : add rules without stopping the firewall (only for IPv4 currently)"
        echo "  panic   : stops all traffic in and out, keeping only loopback and the configured SSH maintainer client"
        echo "  install : fresh install, creates /etc/iptableco and a minimal iptables-main-up.rules. Careful: backup your rules."
        echo
        exit 1
        ;;
esac

exit 0

# vi: set ai et ts=4 sw=4 tw=0 wm=0
# end of /etc/rc.d/rc.iptableco script by drbeco

